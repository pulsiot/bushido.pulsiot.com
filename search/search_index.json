{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Bushid\u014d (\u6b66\u58eb\u9053)","text":"<p> \"the way of the warrior\"</p>"},{"location":"#the-samurai-warrior-code","title":"The Samurai Warrior Code","text":"<p>The samurai of ancient Japan followed a sequence of rules called the Bushido or \u201cThe Way of the Warrior\u201d. These philosophical codes and guiding principles were specifically for the samurai warriors.</p> <p>During the medieval period in Japan, the samurai were present to serve their lord and protect the land. Though the warriors are no longer in service, their influence is still evident since some Japanese still refer to the Bushido in this day and age.</p>"},{"location":"#the-seven-virtues","title":"The Seven Virtues","text":"<p>The Seven Virtues of Bushido are:</p> <ul> <li>Gi \u2013 (Justice or Integrity)</li> <li>Yu (Courage)</li> <li>Jin \u2013 (Mercy or Benevolence)</li> <li>Rei \u2013 (Respect)</li> <li>Makoto \u2013 (Honesty)</li> <li>Meiyo \u2013 (Honor)</li> <li>Chugi \u2013 (Loyalty)</li> </ul> <p>Gi \u2013 Justice or Integrity This is ensuring that the individual has the right way and mindset when making decisions \u2013 that they have the power to decide swiftly. It is to guarantee that the person avoids indecisiveness and that decisions are based on the proper reasons.</p> <p>Yu \u2013 Courage Yu is focused on ensuring that an individual does and has the courage to do the right thing, not what others expect them to do. If a person is raised particularly, they have their own beliefs that they follow and have the courage to do.</p> <p>Jin \u2013 Mercy or Benevolence As great warriors, samurai have the right power to kill; yet due to the Bushido, Jin is to ensure that their mind and thinking is balanced \u2013 having mercy and sympathy at the proper situation.</p> <p>Jin and the Samurai This is to ensure that the warrior fought for the right reason and belief; it is also to guarantee that if there was no need to kill, the samurai would have mercy.</p> <p>Rei \u2013 Respect Based on the belief of a samurai, it is important that they respect and be polite towards everything. Their way of life meant they should be respectful of elders, respect life, and respect the belief of others.</p> <p>Makoto \u2013 Honesty Honesty was always vital since the warriors believe that honesty in everything they do will acquire respect. It would also mean that they are trustworthy.</p> <p>Meiyo \u2013 Honor Living and dying with great honor was vital to every samurai warrior. Everything they did was with great honor; meaning, everything that they did based on their belief was with honor.</p> <p>Chugi \u2013 Loyalty Another vital aspect of the Bushido was loyalty. The samurai treated each other just like family and would safeguard and help their fellow warriors.</p> <p>This was important because it meant they could trust each other, knowing that they would be loyal despite the circumstances.</p>"},{"location":"devops/","title":"DevOps","text":"<p>The index page for DevOps help topics.</p>"},{"location":"devops/aws/","title":"AWS","text":"<p>The index page for AWS Help Topics</p>"},{"location":"devops/aws/iam/roles/","title":"AWS IAM Roles","text":""},{"location":"devops/aws/iam/roles/#create-iam-user","title":"Create IAM user","text":"<p>Lets create a new IAM user and a new IAM Role in AWS Account using AWS CLI. We will require AWS Admin user who have the permission to IAM users, IAM roles and IAM Policies.</p> <p>Lets create a AWS IAM user for \"maurice moss\".</p> <pre><code>aws iam create-user --user-name maurice-moss\n</code></pre> <p>This should give us an output which will contain the ARN of the new IAM user, something like <code>arn:aws:iam::123456789012:user/maurice-moss</code> (Replace 123456789012 with your own account.)</p>"},{"location":"devops/aws/iam/roles/#create-iam-policy","title":"Create IAM policy","text":"<p>Now, lets create IAM Policy</p> <p>Create a file named \"example-policy.json\"</p> <pre><code>{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:Describe*\",\n        \"iam:ListRoles\",\n        \"sts:AssumeRole\"\n      ],\n      \"Resource\": \"*\"\n    }\n  ]\n}\n</code></pre> <p>create \"user-define\" policy from the above \"example-policy.json\" file:</p> <pre><code>aws iam create-policy --policy-name example-policy --policy-document file://example-policy.json\n</code></pre> <p>This should give us an output which will contain the ARN of the new policy, something like <code>arn:aws:iam::123456789012:policy/example-policy</code> (Replace 123456789012 with your own account.)</p> <p>Now, lets attach the \"user-define\" policy named \"example-policy\" to the user which we created earlier named \"maurice moss\"</p>"},{"location":"devops/aws/iam/roles/#attach-iam-policy-to-a-iam-user","title":"Attach IAM policy to a IAM User.","text":"<pre><code>aws iam attach-user-policy --user-name maurice-moss --policy-arn \"arn:aws:iam::123456789012:policy/example-policy\"\n</code></pre> <p>Also, check to make sure that the attachment is in place using list-attached-user-policies:</p> <pre><code>aws iam list-attached-user-policies --user-name maurice-moss\n</code></pre>"},{"location":"devops/aws/iam/roles/#create-aws-credentials","title":"Create AWS credentials","text":"<p>Now lets create a \"access_key_id\" and \"secret_access_key\" for the IAM user \"maurice-moss\".</p> <pre><code>aws iam create-access-key --user-name maurice-moss\n</code></pre> <p>Please keep note of these credentials later.</p>"},{"location":"devops/aws/iam/roles/#create-iam-role","title":"Create IAM role","text":"<p>Now we will create a IAM role which could be assumed by the user \"maurice-moss\". Which have read-only access to RDS.</p> <p>So, lets create a trust relationship policy of the IAM role.</p> <p>Lets name this file : <code>example-role-trust-policy.json</code></p> <pre><code>{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": {\n    \"Effect\": \"Allow\",\n    \"Principal\": { \"AWS\" : \"arn.aws:iam::123456789012:root\" },\n    \"Action\": \"sts:AssumeRole\"\n  }\n}\n</code></pre> <p>Lets create a IAM Role with this trust relationship policy.</p> <pre><code>aws iam create-role --role-name example-role --assume-role-policy-document file://example-role-trust-policy.json\n</code></pre> <p>Now lets attach an \"AWS Managed\" policy named \"arn:aws:iam::aws:policy/AmazonRDSReadOnlyAccess\" to this role.</p> <pre><code>aws iam attach-role-policy --role-name example-role --policy-arn \"arn:aws:iam::aws:policy/AmazonRDSReadOnlyAccess\"\n</code></pre> <p>We can verify the managed policies attached to a role using <code>list-attached-role-policies</code> :</p> <pre><code>aws iam list-attached-role-policies --role-name example-role\n</code></pre>"},{"location":"devops/aws/iam/roles/#test-iam-user-and-iam-role","title":"Test IAM user and IAM role","text":"<p>Now we have the IAM user and the IAM role ready, lets confgure AWS CLI for the IAM user \"maurice-moss\" and verify its permissions.</p> <p>Lets use <code>aws configure</code> or <code>aws configure --profile=named-profile</code> command to configure the same. When asked for the Access Key and Secret Key provide the same we collected earlier.</p> <p>Lets run the below command: to verify the identity of the IAM user.</p> <pre><code>aws sts get-caller-identity\n</code></pre> <p>You will see the IAM user as <code>arn:aws:iam::123456789012:user/maurice-moss</code></p> <p>Now try to access the EC2 and RDS instances:</p> <p>Lets try EC2 as 1st step:</p> <pre><code>aws ec2 describe-instances --query \"Reservations[*].Instances[*].[VpcId, InstanceId, ImageId, InstanceType]\"\n</code></pre> <p>This should work flawlessly,</p> <p>Now, lets try to access RDS as 2nd step:</p> <pre><code>aws rds describe-db-instances --query \"DBInstances[*].[DBInstanceIdentifier, DBName, DBInstanceStatus, AvailabilityZone, DBInstanceClass]\"\n</code></pre> <p>This command will generate an access denied error message because IAM user \"maurice-moss\" doesn't have access to Amazon RDS.</p> <p>In order for IAM user \"maurice-moss\" to access RDS instance, he should assume the IAM role named \"example-role\" as below:</p> <p>As a 1st step we need to identify the ARN of the IAM role named \"example-role\"</p> <pre><code>aws iam list-roles --query \"Roles[?RoleName == 'example-role'].[RoleName, Arn]\"\n</code></pre> <p>Lets keep not of the ARN from the above command, as we will have to use it with below Assume IAM role command:</p> <pre><code>aws sts assume-role --role-arn \"arn:aws:iam::123456789012:role/example-role\" --role-session-name AWSCLI-Session\n</code></pre> <p>Now lets create three environment variables to assume the IAM role.</p> <pre><code>export AWS_ACCESS_KEY_ID=RoleAccessKeyID\nexport AWS_SECRET_ACCESS_KEY=RoleSecretKey\nexport AWS_SESSION_TOKEN=RoleSessionToken\n</code></pre> <p>Now, lets re-try to access RDS using then IAM role:</p> <pre><code>aws rds describe-db-instances --query \"DBInstances[*].[DBInstanceIdentifier, DBName, DBInstanceStatus, AvailabilityZone, DBInstanceClass]\"\n</code></pre>"},{"location":"devops/aws/iam/roles/#references","title":"References:","text":"<ul> <li>https://aws.amazon.com/premiumsupport/knowledge-center/iam-assume-role-cli/</li> <li>https://www.youtube.com/watch?v=-uogKFE1r60</li> </ul>"}]}